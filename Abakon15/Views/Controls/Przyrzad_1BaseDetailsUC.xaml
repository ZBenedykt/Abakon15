<UserControl x:Class="Abakon15.Views.Controls.Przyrzad_1BaseDetailsUC"
 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:CS="clr-namespace:Abakon15.Views.Controls.Standard"
             xmlns:UC="clr-namespace:Abakon15.Views.Controls"
             xmlns:VM="clr-namespace:Abakon15.ViewModels"
             xmlns:infra ="clr-namespace:Abakon15.Infrastructure"
             xmlns:set="clr-namespace:Abakon15.Properties"          
             xmlns:chart="clr-namespace:System.Windows.Controls.DataVisualization.Charting;assembly=System.Windows.Controls.DataVisualization.Toolkit"
             
             mc:Ignorable="d" 
             d:DesignHeight="600" d:DesignWidth="1200" 
             d:DataContext="{d:DesignInstance Type=VM:PrzyrzadPomiarowyVM}"  IsVisibleChanged="UserControl_IsVisibleChanged" >
    <!--  xmlns:datavis="clr-namespace:System.Windows.Controls.DataVisualization;assembly=System.Windows.Controls.DataVisualization.Toolkit"-->

    <UserControl.Resources>
        
    </UserControl.Resources>

    <ScrollViewer MaxWidth="1600" MaxHeight="800"
            VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto"   Margin="4" >
        <Grid  Background="{StaticResource HeaderGridBackground}" >
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition/>
            </Grid.RowDefinitions>

            <GroupBox Margin="4" MaxWidth="1800" >
                <Grid x:Name="c_detailsGrid"  Margin="0" MaxWidth="1800" >
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"  />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions >
                        <ColumnDefinition  Width="Auto" MaxWidth="100"/>
                        <ColumnDefinition  Width="Auto"/>
                        <ColumnDefinition  Width="Auto"/>
                       
                    </Grid.ColumnDefinitions>
                    <StackPanel Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="3" Orientation="Horizontal" >
                        <TextBlock  Text="{Resx ResxName=Abakon15.LangKeys.ResourceLang, Key=_1_PrzyrzadPomiarowyNrKod_Label}" 
                HorizontalAlignment="Right" Margin="20,4,4,4" VerticalAlignment="Center"
                Visibility= "{Binding Source={x:Static set:Settings.Default}, Path=_1_PrzyrzadPomiarowyNrKod_ColumnVisibility, Mode=TwoWay, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                        <TextBox  Margin="4" Width="80"
                Text="{Binding Path=CurrentPrzyrzadPomiarowy.PrzyrzadPomiarowyNrKod, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True, ValidatesOnDataErrors=True}" HorizontalAlignment="Center" IsReadOnly="{Binding Path=ReadOnly}"
                Visibility= "{Binding Source={x:Static set:Settings.Default}, Path=_1_PrzyrzadPomiarowyNrKod_ColumnVisibility, Mode=TwoWay, Converter={StaticResource BooleanToVisibilityConverter}}" Foreground="Maroon" FontStretch="Expanded" FontSize="16" />

                        <TextBlock   Text="{Resx ResxName=Abakon15.LangKeys.ResourceLang, Key=_1_Nazwa_Label}" 
                HorizontalAlignment="Right" Margin="4" VerticalAlignment="Center"
                Visibility= "{Binding Source={x:Static set:Settings.Default}, Path=_1_Nazwa_ColumnVisibility, Mode=TwoWay, Converter={StaticResource BooleanToVisibilityConverter}}"/>

                        <TextBox Margin="4"  MinWidth="300" MaxWidth="400"
                Text="{Binding Path=CurrentPrzyrzadPomiarowy.Nazwa, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True, ValidatesOnDataErrors=True}" HorizontalAlignment="Left" IsReadOnly="{Binding Path=ReadOnly}"
                Visibility= "{Binding Source={x:Static set:Settings.Default}, Path=_1_Nazwa_ColumnVisibility, Mode=TwoWay, Converter={StaticResource BooleanToVisibilityConverter}}" TextWrapping="Wrap" FontStretch="Expanded" FontSize="16" />
                    <TextBox Margin="4"  MinWidth="300" MaxWidth="400"
                Text="{Binding Path=CurrentPrzyrzadPomiarowy.NazwaAngielska, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True, ValidatesOnDataErrors=True}" HorizontalAlignment="Left" IsReadOnly="{Binding Path=ReadOnly}"
                    ToolTip="Nazwa angielska"
                             Visibility= "{Binding Source={x:Static set:Settings.Default}, Path=_1_Nazwa_ColumnVisibility, Mode=TwoWay, Converter={StaticResource BooleanToVisibilityConverter}}" TextWrapping="Wrap" FontStretch="Expanded" FontSize="16" />
                        <TextBlock  Text="{Resx ResxName=Abakon15.LangKeys.ResourceLang, Key=_1_NrSAP_Label}" 
                HorizontalAlignment="Right" Margin="4" VerticalAlignment="Center"
                Visibility="{Binding Path=Visibility, ElementName=_NrSAP_TextBox}"/>

                        <TextBox x:Name="_NrSAP_TextBox"  Margin="4" MinWidth="80"
                Text="{Binding Path=CurrentPrzyrzadPomiarowy.NrSAP, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True, ValidatesOnDataErrors=True}" HorizontalAlignment="Left" IsReadOnly="{Binding Path=ReadOnly}">
                            <TextBox.Visibility>
                                <MultiBinding Converter="{StaticResource GlobalMultiBooleanToVisibilityConverter}"  >
                                    <!-- B1 => B2 & B3 & ... -->
                                    <Binding Path="ReadOnly" />
                                    <Binding   Source="{x:Static set:Settings.Default}"  Path="_1_NrSAP_ColumnVisibility" />
                                    <Binding Path="CurrentPrzyrzadPomiarowy.NrSAP" Converter="{StaticResource GlobalNullToBooleanConverter}" />
                                </MultiBinding>
                            </TextBox.Visibility>
                        </TextBox>

                        <TextBlock  Text="{Resx ResxName=Abakon15.LangKeys.ResourceLang, Key=_1_NrEwid_Label}" 
                HorizontalAlignment="Right" Margin="4" VerticalAlignment="Center"
                Visibility="{Binding Path=Visibility, ElementName=_NrEwid_TextBox}"/>
                        <TextBox x:Name="_NrEwid_TextBox"  Margin="4" MinWidth="80"
                Text="{Binding Path=CurrentPrzyrzadPomiarowy.NrEwid, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True, ValidatesOnDataErrors=True}" HorizontalAlignment="Left" IsReadOnly="{Binding Path=ReadOnly}">
                            <TextBox.Visibility>
                                <MultiBinding Converter="{StaticResource GlobalMultiBooleanToVisibilityConverter}"  >
                                    <!-- B1 => B2 & B3 & ... -->
                                    <Binding Path="ReadOnly" />
                                    <Binding   Source="{x:Static set:Settings.Default}"  Path="_1_NrEwid_ColumnVisibility" />
                                    <Binding Path="CurrentPrzyrzadPomiarowy.NrEwid" Converter="{StaticResource GlobalNullToBooleanConverter}" />
                                </MultiBinding>
                            </TextBox.Visibility>
                        </TextBox>

                        <TextBlock   Text="{Resx ResxName=Abakon15.LangKeys.ResourceLang, Key=_1_NrInwentarzowy_Label}" 
                HorizontalAlignment="Right" Margin="4" VerticalAlignment="Center"
                Visibility="{Binding Path=Visibility, ElementName=_NrInwentarzowy_TextBox}"/>
                        <TextBox x:Name="_NrInwentarzowy_TextBox"   Margin="4" MinWidth="80"
                Text="{Binding Path=CurrentPrzyrzadPomiarowy.NrInwentarzowy, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True, ValidatesOnDataErrors=True}" HorizontalAlignment="Left" IsReadOnly="{Binding Path=ReadOnly}">
                            <TextBox.Visibility>
                                <MultiBinding Converter="{StaticResource GlobalMultiBooleanToVisibilityConverter}">
                                    <Binding Path="ReadOnly" />
                                    <Binding   Source="{x:Static set:Settings.Default}"  Path="_1_NrInwentarzowy_ColumnVisibility" />
                                    <Binding Path="CurrentPrzyrzadPomiarowy.NrInwentarzowy" Converter="{StaticResource GlobalNullToBooleanConverter}" />
                                </MultiBinding>
                            </TextBox.Visibility>
                        </TextBox>

                    </StackPanel>


                    <StackPanel Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="3" Orientation="Horizontal" >

                        <TextBlock Text="{Resx ResxName=Abakon15.LangKeys.ResourceLang, Key=_1_Typ_Label}"
                HorizontalAlignment="Stretch" Margin="10,6,4,4" VerticalAlignment="Top"
                Visibility= "{Binding Source={x:Static set:Settings.Default}, Path=_1_MiejsceUzytkowaniaId_ColumnVisibility, Mode=TwoWay, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                        <TextBox  Margin="0,4" MinWidth="80"
                Text="{Binding Path=CurrentPrzyrzadPomiarowy.equipmentType.FullPath, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True, ValidatesOnDataErrors=True}" HorizontalAlignment="Left" IsReadOnly="{Binding Path=ReadOnly}"
                Visibility= "{Binding Source={x:Static set:Settings.Default}, Path=_1_MiejsceUzytkowaniaId_ColumnVisibility, Mode=TwoWay, Converter={StaticResource BooleanToVisibilityConverter}}" TextWrapping="Wrap" VerticalAlignment="Top" />
                        <Button  Width="22" Height="22" DataContext="{Binding}" IsEnabled="{Binding Path=ReadOnly, Converter={StaticResource GlobalBoolRevertConverter}}"
                             Command="{Binding Path=SelectEquipmentTypeCommand}" VerticalAlignment="Top" Margin="0,4,0,0">
                            <Button.Content>
                                <Path Visibility="Visible" HorizontalAlignment="Left" Margin="0" VerticalAlignment="Center" Data="M 0 2 L 10 2 L 5 8 Z">
                                    <Path.Fill>
                                        <SolidColorBrush Color="White"/>
                                    </Path.Fill>
                                </Path>
                            </Button.Content>
                        </Button>


                        <TextBlock Text="{Resx ResxName=Abakon15.LangKeys.ResourceLang, Key=_1_RokProdukcji_Label}" 
                HorizontalAlignment="Right" Margin="10,4,4,4" VerticalAlignment="Top"
                Visibility="{Binding Path=Visibility, ElementName=_RokProdukcji_TextBox}"/>
                        <TextBox x:Name="_RokProdukcji_TextBox"  Margin="4" Width="60"
                Text="{Binding Path=CurrentPrzyrzadPomiarowy.RokProdukcji, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True, ValidatesOnDataErrors=True}" HorizontalAlignment="Left" IsReadOnly="{Binding Path=ReadOnly}" VerticalAlignment="Top">
                            <TextBox.Visibility>
                                <MultiBinding Converter="{StaticResource GlobalMultiBooleanToVisibilityConverter}">
                                    <Binding Path="ReadOnly" />
                                    <!--Jeśli nie ReadOnly, to widoczne. ReadOnly musi być na pierwszej pozycji! -->
                                    <Binding   Source="{x:Static set:Settings.Default}"  Path="_1_RokProdukcji_ColumnVisibility" />
                                    <Binding Path="CurrentPrzyrzadPomiarowy.RokProdukcji" Converter="{StaticResource GlobalNullToBooleanConverter}" />
                                </MultiBinding>
                            </TextBox.Visibility>
                        </TextBox>

                        <TextBlock  Text="{Resx ResxName=Abakon15.LangKeys.ResourceLang, Key=_1_ProducentId_Label}" 
                HorizontalAlignment="Right" Margin="4" VerticalAlignment="Top" 
                   Visibility="{Binding ElementName=_producent_TextBox, Path=Visibility}" />
                        <TextBox x:Name="_producent_TextBox"  Margin="4" MinWidth="180" 
                Text="{Binding Path=CurrentPrzyrzadPomiarowy.producent, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True, ValidatesOnDataErrors=True}"  IsReadOnly="{Binding Path=ReadOnly}" VerticalAlignment="Top">
                            <TextBox.Visibility>
                                <MultiBinding Converter="{StaticResource GlobalMultiBooleanToVisibilityConverter}">
                                    <Binding Path="ReadOnly" />

                                    <Binding   Source="{x:Static set:Settings.Default}"  Path="_1_ProducentId_ColumnVisibility" />
                                    <Binding Path="CurrentPrzyrzadPomiarowy.producent" Converter="{StaticResource GlobalNullToBooleanConverter}" />
                                </MultiBinding>
                            </TextBox.Visibility>

                        </TextBox>


                        <TextBlock  Text="{Resx ResxName=Abakon15.LangKeys.ResourceLang, Key=_1_SymbolProducenta_Label}" 
                HorizontalAlignment="Right" Margin="10,4,4,4" VerticalAlignment="Top"
                Visibility="{Binding ElementName=_SymbolProducenta_TextBox, Path=Visibility}" />
                        <TextBox x:Name="_SymbolProducenta_TextBox" Margin="4" MinWidth="100"
                Text="{Binding Path=CurrentPrzyrzadPomiarowy.SymbolProducenta, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True, ValidatesOnDataErrors=True}" IsReadOnly="{Binding Path=ReadOnly}" VerticalAlignment="Top">
                            <TextBox.Visibility>
                                <MultiBinding Converter="{StaticResource GlobalMultiBooleanToVisibilityConverter}">
                                    <Binding Path="ReadOnly" />
                                    <Binding   Source="{x:Static set:Settings.Default}"  Path="_1_SymbolProducenta_ColumnVisibility" />
                                    <Binding Path="CurrentPrzyrzadPomiarowy.SymbolProducenta" Converter="{StaticResource GlobalNullToBooleanConverter}" />
                                </MultiBinding>
                            </TextBox.Visibility>
                        </TextBox>


                        <TextBlock  Text="{Resx ResxName=Abakon15.LangKeys.ResourceLang, Key=_1_NrFabryczny_Label}" 
                 Margin="4" VerticalAlignment="Top"
                Visibility="{Binding ElementName=_NrFabryczny_TextBox, Path=Visibility}"/>
                        <TextBox x:Name="_NrFabryczny_TextBox"  Margin="4" MinWidth="80"
                Text="{Binding Path=CurrentPrzyrzadPomiarowy.NrFabryczny, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True, ValidatesOnDataErrors=True}" IsReadOnly="{Binding Path=ReadOnly}" VerticalAlignment="Top">
                            <TextBox.Visibility>
                                <MultiBinding Converter="{StaticResource GlobalMultiBooleanToVisibilityConverter}">
                                    <Binding Path="ReadOnly" />
                                    <!--Jeśli nie ReadOnly, to widoczne. ReadOnly musi być na pierwszej pozycji! -->
                                    <Binding   Source="{x:Static set:Settings.Default}"  Path="_1_NrFabryczny_ColumnVisibility" />
                                    <Binding Path="CurrentPrzyrzadPomiarowy.NrFabryczny" Converter="{StaticResource GlobalNullToBooleanConverter}" />
                                </MultiBinding>
                            </TextBox.Visibility>
                        </TextBox>

                        <TextBlock  Text="{Resx ResxName=Abakon15.LangKeys.ResourceLang, Key=_1_DataGwarancji_Label}" 
                 Margin="4" VerticalAlignment="Top"
                Visibility="{Binding ElementName=_DataGwarancji_DatePicker, Path=Visibility}"/>
                        <DatePicker x:Name="_DataGwarancji_DatePicker" Margin="4" Width="100"
                HorizontalAlignment="Left" IsEnabled="{Binding Path=ReadOnly, Converter={StaticResource GlobalBoolRevertConverter}}"
                    SelectedDate="{Binding Path=CurrentPrzyrzadPomiarowy.DataGwarancji,  Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True, ValidatesOnDataErrors=True}" VerticalAlignment="Top">
                            <DatePicker.Visibility>
                                <MultiBinding Converter="{StaticResource GlobalMultiBooleanToVisibilityConverter}">
                                    <Binding Path="ReadOnly" />
                                    <!--Jeśli nie ReadOnly, to widoczne. ReadOnly musi być na pierwszej pozycji! -->
                                    <Binding   Source="{x:Static set:Settings.Default}"  Path="_1_DataGwarancji_ColumnVisibility" />
                                    <Binding Path="CurrentPrzyrzadPomiarowy.DataGwarancji" Converter="{StaticResource GlobalNullToBooleanConverter}" />
                                </MultiBinding>
                            </DatePicker.Visibility>
                        </DatePicker>

                    </StackPanel>



                    <Button Grid.Row="11" Grid.Column="0" Content="Ctrl+V" Style="{StaticResource CircleButton}" Margin="2,2,4,2"  Height="25" Width="35" IsEnabled="True" IsDefault="False"  
                                    FontSize="10" FontWeight="Bold" ToolTip="{Resx ResxName=Abakon15.LangKeys.ResourceLang, Key=_pasteTo_scopeDatagrid_ToolTip}" Command="{Binding Path=AddFromClipboardCommand}" HorizontalAlignment="Right" Visibility="{Binding Path=ScopePasteVisible}" />
                    <DataGrid x:Name="_scopeDatagrid" Grid.Row="11" Grid.Column="1" Grid.ColumnSpan="2"  AutoGenerateColumns="False"  
                              KeyboardNavigation.TabNavigation="Continue" 

                              
                    MaxHeight="300" IsReadOnly="{Binding Path=ReadOnly, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"   
                           ItemsSource="{Binding Path=CurrentPrzyrzadPomiarowy.zakresyPomiarowe, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, NotifyOnTargetUpdated=True}" 
                           IsSynchronizedWithCurrentItem="True" TargetUpdated="_scopeDatagrid_TargetUpdated"
                           SelectionChanged="_przyrzadyDatagrid_SelectionChanged" CanUserAddRows="True" CanUserDeleteRows="True" RowHeaderWidth="0" Margin="5,0,5,5" HeadersVisibility="Column" HorizontalAlignment="Left" PreviewKeyDown="_scopeDatagrid_PreviewKeyDown" SelectedItem="{Binding Path=SelectedZakres}" MinRowHeight="15" IsTabStop="True" SnapsToDevicePixels="True">
                            <!--Visibility="{Binding Path=IsCurrentProductClassificationNotNull, Converter={StaticResource BooleanToVisibilityConverter}}"-->
                            <!--<DataGrid.RowStyle>
                                <Style TargetType="DataGridRow">
                                    <Style.Triggers>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter Property="Background"  Value="{DynamicResource HeaderFuterBrush}" />
                                        </Trigger>

                                    </Style.Triggers>
                                </Style>
                            </DataGrid.RowStyle>-->

                            <DataGrid.CellStyle>
                                <Style TargetType="DataGridCell">
                                    <Setter Property="Foreground" Value="Black"/>
                                    <Setter Property="BorderThickness" Value="0"/>
                                    <Style.Triggers>
                                        <DataTrigger   Binding="{Binding Path=Inherited}" Value="true">
                                            <Setter Property="IsEnabled" Value="False" />
                                        </DataTrigger>
                                        <Trigger Property="IsSelected" Value="True" >
                                            <Setter Property="Background"  Value="{StaticResource TextBoxBrush}" />
                                            <!--  selected row background-->
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGrid.CellStyle>

                            <DataGrid.Resources>
                                <CollectionViewSource x:Key="resDokladnoscWgEnum" Source="{Binding Path=DokladnoscWgEnumTranslate}" />
                                <Style x:Key="CellEditStyle" TargetType="{x:Type TextBox}">
                                    <Setter Property="BorderThickness" Value="2"/>
                                    <Setter Property="BorderBrush" Value="DarkOliveGreen"/>
                                    <Setter Property="Background"  Value="{DynamicResource TextBoxBrush}" />
                                    <Style.Triggers>
                                        <Trigger Property="Validation.HasError" Value="true">
                                            <Setter Property="BorderThickness" Value="2"/>
                                            <Setter Property="BorderBrush" Value="Red"/>
                                            <Setter Property="ToolTip"  Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGrid.Resources>

                            <DataGrid.Columns>

                            <DataGridTextColumn Binding="{Binding Path=Nastawa, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, ValidatesOnDataErrors=True, NotifyOnValidationError=True,   ValidatesOnExceptions=True}" 
                                            Header="{Resx ResxName=Abakon15.LangKeys.ResourceLang, Key=_1_Zkresy_Nastawa_Label}"  EditingElementStyle="{StaticResource CellEditStyle}" MaxWidth="300">
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="TextWrapping" Value="Wrap"/>
                                        <Setter Property="Padding" Value="10,0,0,0"/>
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                            </DataGridTextColumn>
                                <DataGridTextColumn Binding="{Binding Path=ZakresPomiarowy, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, NotifyOnValidationError=True, ValidatesOnExceptions=True}" 
                                            Header="{Resx ResxName=Abakon15.LangKeys.ResourceLang, Key=_1_Zkresy_Zakres_Label}" EditingElementStyle="{StaticResource CellEditStyle}" MaxWidth="300">
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="TextWrapping" Value="Wrap"/>
                                        <Setter Property="Padding" Value="10,0,0,0"/>
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                            </DataGridTextColumn>
                                <DataGridTextColumn Binding="{Binding Path=Wartosc, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, NotifyOnValidationError=True}" 
                                            Header="{Resx ResxName=Abakon15.LangKeys.ResourceLang, Key=_1_Zkresy_WartoscLiczb_Label}" MaxWidth="300" EditingElementStyle="{StaticResource CellEditStyle}" >
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="TextWrapping" Value="Wrap"/>
                                        <Setter Property="Padding" Value="10,0,0,0"/>
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                            </DataGridTextColumn>

                                <DataGridComboBoxColumn  Header="{Resx ResxName=Abakon15.LangKeys.ResourceLang, Key=_1_Zkresy_Wg_Label}" 
                                                 ItemsSource= "{Binding Source={StaticResource resDokladnoscWgEnum}}"
                                                 DisplayMemberPath="Item2"  SelectedValuePath="Item1" 
                                                 SelectedValueBinding="{Binding Path=DokladnoscWg, ValidatesOnExceptions=True, ValidatesOnDataErrors=True, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                                 Visibility="{Binding Source={x:Static set:Settings.Default}, Path=_offerType_ColumnVisibility, Mode=TwoWay, Converter={StaticResource BooleanToVisibilityConverter}}" MaxWidth="200" />

                            </DataGrid.Columns>
                        </DataGrid>                   
                    <StackPanel Grid.Row="12" Grid.Column="0" Grid.ColumnSpan="2"   Orientation="Horizontal" DockPanel.Dock="Left"   >

                            <TextBlock Text="{Resx ResxName=Abakon15.LangKeys.ResourceLang, Key=_1_MiejsceUzytkowaniaId_Label}" 
                HorizontalAlignment="Right" Margin="10,6,4,4" VerticalAlignment="Top"
                Visibility= "{Binding Source={x:Static set:Settings.Default}, Path=_1_MiejsceUzytkowaniaId_ColumnVisibility, Mode=TwoWay, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                            <TextBox  Margin="0,4" MinWidth="80"
                Text="{Binding Path=CurrentPrzyrzadPomiarowy.miejsceUzytkowania.FullPath, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True, ValidatesOnDataErrors=True}" HorizontalAlignment="Left" IsReadOnly="{Binding Path=ReadOnly}"
                Visibility= "{Binding Source={x:Static set:Settings.Default}, Path=_1_MiejsceUzytkowaniaId_ColumnVisibility, Mode=TwoWay, Converter={StaticResource BooleanToVisibilityConverter}}" TextWrapping="Wrap" VerticalAlignment="Top" />
                            <Button  Width="22" Height="22" DataContext="{Binding}" IsEnabled="{Binding Path=ReadOnly, Converter={StaticResource GlobalBoolRevertConverter}}"
                             Command="{Binding Path=SelectDepartmentCommand}" VerticalAlignment="Top" Margin="0,4,0,0">
                                <Button.Content>
                                    <Path Visibility="Visible" HorizontalAlignment="Left" Margin="0" VerticalAlignment="Center" Data="M 0 2 L 10 2 L 5 8 Z">
                                        <Path.Fill>
                                            <SolidColorBrush Color="White"/>
                                        </Path.Fill>
                                    </Path>
                                </Button.Content>
                            </Button>
                        </StackPanel>

                        <StackPanel Grid.Row="12" Grid.Column="2" Orientation="Horizontal"    >
                            <TextBlock  Text="{Resx ResxName=Abakon15.LangKeys.ResourceLang, Key=_1_UzytkwnikId_Label}" 
                HorizontalAlignment="Right" Margin="1,6,4,4" VerticalAlignment="Top"
                Visibility= "{Binding Source={x:Static set:Settings.Default}, Path=_1_WlascicielId_ColumnVisibility, Mode=TwoWay, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                            <TextBox  Margin="0,4" MinWidth="80" Text="{Binding Path=CurrentPrzyrzadPomiarowy.UzytkownikNazwa, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True, ValidatesOnDataErrors=True}" HorizontalAlignment="Left" IsReadOnly="{Binding Path=ReadOnly}"
                Visibility= "{Binding Source={x:Static set:Settings.Default}, Path=_1_UzytkownikId_ColumnVisibility, Mode=TwoWay, Converter={StaticResource BooleanToVisibilityConverter}}" TextWrapping="Wrap" VerticalAlignment="Top" />
                            <Button x:Name="_uzytkownikPrzyrzadu_Button"  Width="22" Height="22" DataContext="{Binding}" IsEnabled="{Binding Path=ReadOnly, Converter={StaticResource GlobalBoolRevertConverter}}" Visibility= "{Binding Source={x:Static set:Settings.Default}, Path=_1_UzytkownikId_ColumnVisibility, Mode=TwoWay, Converter={StaticResource BooleanToVisibilityConverter}}"
                                                          VerticalAlignment="Top" Margin="0,4"  Click="_uzytkownikPrzyrzadu_Button_Click"
                    >
                                <Button.Content>
                                    <Path Visibility="Visible" HorizontalAlignment="Left" Margin="0" VerticalAlignment="Center" Data="M 0 2 L 10 2 L 5 8 Z">
                                        <Path.Fill>
                                            <SolidColorBrush Color="White"/>
                                        </Path.Fill>
                                    </Path>
                                </Button.Content>
                            </Button>
                            <Popup x:Name="_equpmentUserPopUP"  StaysOpen="False" PopupAnimation="Slide" IsOpen="False" Placement="MousePoint" >

                                <Border Background="{StaticResource TextBoxBrush}"  BorderBrush="Silver" BorderThickness="1" ClipToBounds="True" MaxHeight="500">
                                    <Border Background="{StaticResource TextBoxBrush}" BorderBrush="DarkGreen"   BorderThickness="1" >
                                        <Border.Effect>
                                            <DropShadowEffect ShadowDepth="0" BlurRadius="15"/>
                                        </Border.Effect>
                                        <Grid>
                                            <Grid.RowDefinitions >
                                                <RowDefinition />
                                                <RowDefinition />
                                            </Grid.RowDefinitions>
                                            <ListView x:Name="_equipmentUser_ListView" Grid.Row="0" HorizontalAlignment="Stretch"   VerticalAlignment="Stretch" Margin="4,0,9,4"
                                                                         ItemsSource="{Binding Path=EmployeeList, UpdateSourceTrigger=PropertyChanged}" 
                                                                         SelectionMode="Single" AlternationCount="2" MaxHeight="1200"
                                    Loaded="_equipmentUser_ListView_Loaded" SelectedValue="{Binding Path=SelectedEquipmentUser}">
                                                <ListView.Resources>
                                                    <DataTemplate x:Key="CheckBoxCell">
                                                        <CheckBox IsChecked="{Binding Path=IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListViewItem}}}"/>
                                                    </DataTemplate>
                                                </ListView.Resources>
                                                <ListView.View>
                                                    <GridView AllowsColumnReorder="False">
                                                        <GridView.Columns>
                                                            <GridViewColumn  Width="30"  CellTemplate="{StaticResource CheckBoxCell}"/>
                                                            <GridViewColumn Header="{Resx ResxName=Abakon15.LangKeys.ResourceLang, Key=_labWorkerKalibrator_Header}"  
                                                                                 DisplayMemberBinding="{Binding Path= SureFirstName, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, StringFormat=\{0\,-60\}}" Width="180"   />
                                                        </GridView.Columns>
                                                    </GridView>
                                                </ListView.View>


                                            </ListView>
                                            <StackPanel Grid.Row="1" Orientation="Horizontal" >
                                                <Button x:Name="_selectEployee_Button" Grid.Row="1"  Margin="5,0" Width="80" Style="{StaticResource CommandButtonStyle}" Command="{Binding Path=EquipmentUserChangeCommand}" CommandParameter="Select" Click="_hidePopUp_Button_Click">
                                                    <ButtonBase.Content>
                                                        <StackPanel Orientation="Horizontal">
                                                            <TextBlock Text="OK" />
                                                        </StackPanel>
                                                    </ButtonBase.Content>
                                                </Button>
                                                <Button x:Name="_resign_Button" Grid.Row="1"  Margin="5,0" Width="80" Style="{StaticResource CommandButtonStyle}" Command="{Binding Path=EquipmentUserChangeCommand}" CommandParameter="Clear"   Click="_hidePopUp_Button_Click">
                                                    <ButtonBase.Content>
                                                        <StackPanel Orientation="Horizontal">
                                                            <TextBlock Text="Nieznany" />
                                                        </StackPanel>
                                                    </ButtonBase.Content>
                                                </Button>
                                                <Button x:Name="_esc_Button" Grid.Row="1"  Margin="5,0" Width="80" Style="{StaticResource CommandButtonStyle}" Click="_hidePopUp_Button_Click"  >
                                                    <ButtonBase.Content>
                                                        <StackPanel Orientation="Horizontal">
                                                            <TextBlock Text="Esc" />
                                                        </StackPanel>
                                                    </ButtonBase.Content>
                                                </Button>
                                            </StackPanel>
                                        </Grid>
                                    </Border>
                                </Border>
                            </Popup>
                        
                       

                        
                    </StackPanel> 
                </Grid>
            </GroupBox>
            
            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                
            
            <GroupBox Grid.Row="1" Margin="4,0,4,4"   >
                <Grid Grid.Row="1" >
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto"  />
                          <RowDefinition Height="Auto"  />
                        </Grid.RowDefinitions>

                    <StackPanel Orientation="Horizontal" Width="Auto" >
                        <TextBlock  Text="{Resx ResxName=Abakon15.LangKeys.ResourceLang, Key=_1_CzasokresSprawdzania_Label}" 
                HorizontalAlignment="Right" Margin="4" VerticalAlignment="Center"
                 Visibility="{Binding ElementName=_CzasokresSprawdzania_TextBox, Path=Visibility}"/>

                        <TextBlock  Text="{Resx ResxName=Abakon15.LangKeys.ResourceLang, Key=_1_CzasokresSprawdzaniaMC_Label}" 
                HorizontalAlignment="Right" Margin="4" VerticalAlignment="Center"
                 Visibility="{Binding ElementName=_CzasokresSprawdzania_TextBox, Path=Visibility}"/>

                        <TextBox x:Name="_CzasokresSprawdzaniaMC_TextBox"  Margin="4" MinWidth="080"
                Text="{Binding Path=CurrentPrzyrzadPomiarowy.CzasokresSprawdzaniaMC, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True, ValidatesOnDataErrors=True}" HorizontalAlignment="Left" IsReadOnly="{Binding Path=ReadOnly}"
                Visibility="{Binding ElementName=_CzasokresSprawdzania_TextBox, Path=Visibility}" >
                        </TextBox>

                        <TextBlock  Text="{Resx ResxName=Abakon15.LangKeys.ResourceLang, Key=_1_DataOstatniegoBadania_Label}" 
                 Margin="4" VerticalAlignment="Center"
                Visibility="{Binding ElementName=_DataOstatniegoBadania_DataPicker, Path=Visibility}"/>
                        <!--<DatePicker x:Name="_DataOstatniegoBadania_DataPicker" Margin="4" Width="100"
                HorizontalAlignment="Left" IsEnabled="{Binding Path=ReadOnly, Converter={StaticResource GlobalBoolRevertConverter}}"
                SelectedDate="{Binding Path=CurrentPrzyrzadPomiarowy.AktualnaKalibracja.DataOstatniegoBadania,  Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True, ValidatesOnDataErrors=True}" >
                            <DatePicker.Visibility>
                                <MultiBinding Converter="{StaticResource GlobalMultiBooleanToVisibilityConverter}">
                                    <Binding Path="ReadOnly" />
                                    Jeśli nie ReadOnly, to widoczne. ReadOnly musi być na pierwszej pozycji! 
                                    <Binding   Source="{x:Static set:Settings.Default}"  Path="_1_DataOstatniegoBadania_ColumnVisibility" />
                                    <Binding Path="CurrentPrzyrzadPomiarowy.DataOstatniegoBadania" Converter="{StaticResource GlobalNullToBooleanConverter}" />
                                </MultiBinding>
                            </DatePicker.Visibility>
                        </DatePicker>-->
                    <TextBox  Margin="4" MinWidth="80"
                Text="{Binding Path=CurrentPrzyrzadPomiarowy.AktualnaKalibracja.DataBadania, Mode=TwoWay, StringFormat=\{0:d\}}"
                              HorizontalAlignment="Left" IsReadOnly="True"  VerticalAlignment="Top" />
                    <TextBlock  Text="{Resx ResxName=Abakon15.LangKeys.ResourceLang, Key=_1_DataNastepnegoBadania_Label}" 
                 Margin="4" VerticalAlignment="Center"
                Visibility="{Binding ElementName=_DataNastepnegoBadania_DataPicker, Path=Visibility}"/>
                        <!--<DatePicker x:Name="_DataNastepnegoBadania_DataPicker" Margin="4" Width="100"
                SelectedDate="{Binding Path=CurrentPrzyrzadPomiarowy.AktualnaKalibracja.DataNastepnegoBadania, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True, ValidatesOnDataErrors=True}" HorizontalAlignment="Left"
                                    IsEnabled="{Binding Path=ReadOnly, Converter={StaticResource GlobalBoolRevertConverter}}">
                            <DatePicker.Visibility>
                                <MultiBinding Converter="{StaticResource GlobalMultiBooleanToVisibilityConverter}">
                                    <Binding Path="ReadOnly" />
                                  
                                    <Binding   Source="{x:Static set:Settings.Default}"  Path="_1_DataNastepnegoBadania_ColumnVisibility" />
                                    <Binding Path="CurrentPrzyrzadPomiarowy.DataNastepnegoBadania" Converter="{StaticResource GlobalNullToBooleanConverter}" />
                                </MultiBinding>
                            </DatePicker.Visibility>
                        </DatePicker>-->
                    <TextBox  Margin="4" MinWidth="80"
                Text="{Binding Path=CurrentPrzyrzadPomiarowy.AktualnaKalibracja.DataNastepnegoBadania, Mode=TwoWay, StringFormat=\{0:d\}}"
                              HorizontalAlignment="Left" IsReadOnly="True"  VerticalAlignment="Top" />
                        
                            <Button x:Name="_graph_Button"     IsEnabled="True" Style="{StaticResource KeyBoardButton}"   VerticalAlignment="Center"
                            IsDefault="True" Width="48" Height="24" Margin="4,2" IsTabStop="False" Command="{Binding Path=GraphsOpenCommand}">
                                <ButtonBase.Content>
                                    <Image Grid.Column="0" Source="/Abakon15;component/Images/graph.png" Width="40" Height="24" />
                                    <!--<TextBlock Text="{Resx ResxName=Abakon15.LangKeys.ResourceLang, Key=_filter}" Margin="5,2" FontWeight="Bold" Foreground="Maroon" />-->
                                </ButtonBase.Content>
                            </Button>
                        
                        </StackPanel>
                        <StackPanel Grid.Row="1" Orientation="Horizontal" Visibility="{Binding Path=CurrentPrzyrzadPomiarowy.AktualnaKalibracja.KalibracjaObca, Converter={StaticResource BooleanToVisibilityConverterTrueFalse}, ConverterParameter=false}">

                        <TextBlock  Text="{Resx ResxName=Abakon15.LangKeys.ResourceLang, Key=_1_WarunkiSrodowiskoweTemperatura_Label}" 
                HorizontalAlignment="Right" Margin="4" VerticalAlignment="Top"
            Padding="0,4,0,0" />
                        <TextBox  Margin="4" MinWidth="80"
                Text="{Binding Path=CurrentPrzyrzadPomiarowy.AktualnaKalibracja.Temperatura, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True, ValidatesOnDataErrors=True}" HorizontalAlignment="Left" IsReadOnly="True"
                 VerticalAlignment="Top" />
                        <TextBlock Text="ºC" />
                        <TextBlock  Text="{Resx ResxName=Abakon15.LangKeys.ResourceLang, Key=_1_WarunkiSrodowiskoweWilgotnosc_Label}" 
                HorizontalAlignment="Right" Margin="4" VerticalAlignment="Top"
            Padding="0,4,0,0" />
                        <TextBox  Margin="4" MinWidth="80"
                Text="{Binding Path=CurrentPrzyrzadPomiarowy.AktualnaKalibracja.Wilgotnosc, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True, ValidatesOnDataErrors=True}" HorizontalAlignment="Left" IsReadOnly="True"
                 VerticalAlignment="Top" />
                        <TextBlock Text="%RH" />
                    </StackPanel>
                    <StackPanel Grid.Row="2"  Orientation="Horizontal" >



                        <TextBlock  Text="{Resx ResxName=Abakon15.LangKeys.ResourceLang, Key=_1_WynikBadania_Label}" 
                HorizontalAlignment="Right" Margin="4" VerticalAlignment="Top"
                Visibility= "{Binding Source={x:Static set:Settings.Default}, Path=_1_WynikBadania_ColumnVisibility, Mode=TwoWay, Converter={StaticResource BooleanToVisibilityConverter}}" Padding="0,4,0,0" />
                    <!--Visibility= "{Binding Source={x:Static set:Settings.Default}, Path=_1_WynikBadania_ColumnVisibility, Mode=TwoWay, Converter={StaticResource BooleanToVisibilityConverter}}"-->
                    <TextBox  Margin="4" MinWidth="150"          
                Text="{Binding Path=CurrentPrzyrzadPomiarowy.AktualnaKalibracja.WynikBadania, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True, ValidatesOnDataErrors=True}" HorizontalAlignment="Left" IsReadOnly="True"
                 VerticalAlignment="Top" />
                    <TextBox  Margin="4" MinWidth="150"          
                Text="{Binding Path=CurrentPrzyrzadPomiarowy.AktualnaKalibracja.WynikBadaniaEnglish, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True, ValidatesOnDataErrors=True}" HorizontalAlignment="Left" IsReadOnly="True"
                 VerticalAlignment="Top" />
                </StackPanel>
                <StackPanel Grid.Row="3"  Orientation="Horizontal" >
                    <TextBlock    Text="{Resx ResxName=Abakon15.LangKeys.ResourceLang, Key=_2_LabWorkerAccept_Label}" 
                                                HorizontalAlignment="Right" Margin="4" VerticalAlignment="Center" />
                    <TextBox x:Name="_doers_textBox"  Margin="4" 
                             Text="{Binding Path=CurrentPrzyrzadPomiarowy.AktualnaKalibracja.Zatwierdzil, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True, ValidatesOnDataErrors=True}" 
                             MinWidth="120" IsReadOnly="True" VerticalAlignment="Top" />
                    <TextBlock    Text="{Resx ResxName=Abakon15.LangKeys.ResourceLang, Key=_2_LabWorker_Label}" 
                                                HorizontalAlignment="Right" Margin="4" VerticalAlignment="Center" />
                     <TextBox x:Name="_doersLab_textBox"  Margin="4" 
                             Text="{Binding Path=CurrentPrzyrzadPomiarowy.AktualnaKalibracja.Wykonawca, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True, ValidatesOnDataErrors=True}" 
                             MinWidth="120" IsReadOnly="True" VerticalAlignment="Top" />
                    </StackPanel>
                    <StackPanel Grid.Row="4" Orientation="Horizontal">
                        <TextBlock   Text="{Resx ResxName=Abakon15.LangKeys.ResourceLang, Key=_kalibratorNazwa_Header}"  />
                        <DataGrid x:Name="_kalibratory_Datagrid"  AutoGenerateColumns="False"  
                      IsReadOnly="True"  
                           ItemsSource="{Binding Path=CurrentPrzyrzadPomiarowy.AktualnaKalibracja.kalibratory}" 
                           IsSynchronizedWithCurrentItem="True" 
                           SelectionChanged="_przyrzadyDatagrid_SelectionChanged" CanUserAddRows="False" CanUserDeleteRows="False" RowHeaderWidth="0" Margin="5,0,5,5" HeadersVisibility="Column" HorizontalAlignment="Center" 
                            >
                            <!--Visibility="{Binding Path=IsCurrentProductClassificationNotNull, Converter={StaticResource BooleanToVisibilityConverter}}"-->

                            <DataGrid.Columns>

                            <DataGridTextColumn   Header="{Resx ResxName=Abakon15.LangKeys.ResourceLang, Key=_1_PrzyrzadPomiarowyNrKod_Label}"
                                                Binding="{Binding Path=PrzyrzadPomiarowyNrKod, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"   />
                            <DataGridTextColumn   Header="{Resx ResxName=Abakon15.LangKeys.ResourceLang, Key=_1_Nazwa_Label}"
                                                Binding="{Binding Path=Nazwa, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"  />
                            <DataGridTextColumn   Header="{Resx ResxName=Abakon15.LangKeys.ResourceLang, Key=_1_NazwaProducenta_Label}"
                                                Binding="{Binding Path=NazwaProducenta, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"  />
                            <DataGridTextColumn   Header="{Resx ResxName=Abakon15.LangKeys.ResourceLang, Key=_1_dataWaznosciBadania_Label}"
                                                Binding="{Binding Path=DataWaznosciBadania, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, StringFormat=\{0:d\}}" />
                                <DataGridTextColumn   Header="{Resx ResxName=Abakon15.LangKeys.ResourceLang, Key=_2_LabWorker_Label}"
                                                Binding="{Binding Path=Wykonawca, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />

                            </DataGrid.Columns>
                        </DataGrid>
                    </StackPanel>
                        <!--<Expander Grid.Column="1" Grid.Row="25" Header="Diagram" IsExpanded="True">

                            <chart:Chart x:Name="_chart" DataContext="{Binding Path=ChartSource}" Grid.Column="1" Grid.Row="25" Grid.RowSpan="3" Visibility="Visible"
                                       Title="Zakres 1" 
                                       VerticalAlignment="Top" 
                                       Margin="0,58,58,0" 
                                       Height="382"  >
                                <chart:Chart.Axes >
                                    <chart:DateTimeAxis   ShowGridLines="True"  Interval="{Binding}" IntervalType="Years" Orientation="X" />
                                </chart:Chart.Axes>

                                <chart:AreaSeries Name="A"
                                                Title="Limit"  
                                                DependentValuePath="Value" 
                                                IndependentValuePath="Key"
                                                ItemsSource="{Binding [0]}"
                                                IsSelectionEnabled="True"
                                               Foreground="GreenYellow"
                                               Background="Yellow"
                                               >

                                    <chart:AreaSeries.Style>
                                        <Style TargetType="chart:AreaSeries">
                                            <Setter Property="IsTabStop" Value="False"/>

                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="chart:AreaSeries">
                                                        <Canvas x:Name="PlotArea">
                                                            <Path Data="{TemplateBinding Geometry}" StrokeThickness="8" Fill="#A2CEFF55" Style="{TemplateBinding PathStyle}" Opacity="1" />
                                                        </Canvas>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </chart:AreaSeries.Style>
                                </chart:AreaSeries>
                                <chart:LineSeries Name="B" 
                                                Title="Odchyłka"  
                                                DependentValuePath="Value" 
                                                IndependentValuePath="Key"
                                                ItemsSource="{Binding [1]}"
                                                IsSelectionEnabled="True" 
                                                >
                                </chart:LineSeries>



                            </chart:Chart>
                        </Expander>-->
                    </Grid>
            </GroupBox>
                <Expander Grid.Column="1" Margin="10,0,0,0" Header="{Resx ResxName=Abakon15.LangKeys.ResourceLang, Key=_appedix_ExpanderLabel}" FontSize="12" FontWeight="Normal" FontFamily="Arial">
                <GroupBox Grid.Column="1" >
                    <Grid >
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Row="0" Grid.Column="0" Text="{Resx ResxName=Abakon15.LangKeys.ResourceLang, Key=_1_TypWlasnosci_Label}" 
                HorizontalAlignment="Right" Margin="4" VerticalAlignment="Center"
                Visibility= "{Binding Source={x:Static set:Settings.Default}, Path=_1_TypWlasnosci_ColumnVisibility, Mode=TwoWay, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                        <StackPanel Grid.Row="0" Grid.Column="1"  Orientation="Horizontal" >
                           
                            <TextBox  Margin="4" Width="0"
                Text="{Binding Path=CurrentPrzyrzadPomiarowy.TypWlasnosci, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True, ValidatesOnDataErrors=True}" HorizontalAlignment="Left" IsReadOnly="{Binding Path=ReadOnly}"
                Visibility= "{Binding Source={x:Static set:Settings.Default}, Path=_1_TypWlasnosci_ColumnVisibility, Mode=TwoWay, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                            <ComboBox    ItemsSource="{Binding Path=TypWlasnosciEnumTranslate}" Margin="2"  Width="160" DisplayMemberPath="Item2" 
                             SelectedValuePath="Item1"
                              Visibility= "{Binding Source={x:Static set:Settings.Default}, Path=_1_TypWlasnosci_ColumnVisibility, Mode=TwoWay, Converter={StaticResource BooleanToVisibilityConverter}}"
                             IsReadOnly="{Binding Path=ReadOnly}" IsEnabled="{Binding Path=ReadOnly, Converter={StaticResource GlobalBoolRevertConverter}}" SelectedValue="{Binding Path=CurrentPrzyrzadPomiarowy.TypWlasnosci}" />
                            <TextBlock   Text="{Resx ResxName=Abakon15.LangKeys.ResourceLang, Key=_1_Legalizacja_Label}" 
                HorizontalAlignment="Right" Margin="4" VerticalAlignment="Center"
                Visibility= "{Binding Source={x:Static set:Settings.Default}, Path=_1_Legalizacja_ColumnVisibility, Mode=TwoWay, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                            <TextBox Width="0"
                Text="{Binding Path=CurrentPrzyrzadPomiarowy.Legalizacja, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True, ValidatesOnDataErrors=True}" HorizontalAlignment="Left" IsReadOnly="{Binding Path=ReadOnly}"
                Visibility= "{Binding Source={x:Static set:Settings.Default}, Path=_1_Legalizacja_ColumnVisibility, Mode=TwoWay, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                            <ComboBox    ItemsSource="{Binding Path=LegalizacjaEnumTranslate}" Margin="2"  Width="160" DisplayMemberPath="Item2" 
                             SelectedValuePath="Item1" 
                             Visibility= "{Binding Source={x:Static set:Settings.Default}, Path=_1_Legalizacja_ColumnVisibility, Mode=TwoWay, Converter={StaticResource BooleanToVisibilityConverter}}" SelectedValue="{Binding Path=CurrentPrzyrzadPomiarowy.Legalizacja}"
                             IsReadOnly="{Binding Path=ReadOnly}" IsEnabled="{Binding Path=ReadOnly, Converter={StaticResource GlobalBoolRevertConverter}}"/>
                        </StackPanel>
                        <TextBlock Grid.Row="1" Text="{Resx ResxName=Abakon15.LangKeys.ResourceLang, Key=_1_SubGrupa_Label}" 
                            HorizontalAlignment="Right" Margin="4" VerticalAlignment="Center"
                            Visibility="{Binding Path=Visibility, ElementName=_SubGrupa_TextBox}"/>
                        <StackPanel Grid.Row="1" Grid.Column="1"  Orientation="Horizontal" >
                            <TextBox x:Name="_SubGrupa_TextBox"  Margin="4" MinWidth="180"
                           Text="{Binding Path=CurrentPrzyrzadPomiarowy.SubGrupa, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True, ValidatesOnDataErrors=True}"  IsReadOnly="true" VerticalAlignment="Top"
                                      Visibility= "{Binding Source={x:Static set:Settings.Default}, Path=_1_SubGrupa_ColumnVisibility, Mode=TwoWay, Converter={StaticResource BooleanToVisibilityConverter}}" >
                            </TextBox>
                        </StackPanel>
                        
                        <TextBlock Grid.Row="2" Grid.Column="0" Text="Zakres" HorizontalAlignment="Right" Margin="4" VerticalAlignment="Top"
                             Visibility="{Binding ElementName=_Zakres_TextBox, Path=Visibility}"/>
                        <StackPanel Grid.Row="2" Grid.Column="1"  Orientation="Horizontal" >
                            <TextBox x:Name="_Zakres_TextBox"  Margin="4" MinWidth="180"
                           Text="{Binding Path=CurrentPrzyrzadPomiarowy.zakresy, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True, ValidatesOnDataErrors=True}"  IsReadOnly="{Binding Path=ReadOnly}" VerticalAlignment="Top">
                            </TextBox>
                            <TextBlock  Text="Klasa" HorizontalAlignment="Right" Margin="4" VerticalAlignment="Top"
                             Visibility="{Binding ElementName=_Klasa_TextBox, Path=Visibility}"/>
                            <TextBox x:Name="_Klasa_TextBox"  Margin="4" MinWidth="180"
                           Text="{Binding Path=CurrentPrzyrzadPomiarowy.klasa, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True, ValidatesOnDataErrors=True}"  IsReadOnly="{Binding Path=ReadOnly}" VerticalAlignment="Top" AcceptsTab="True" AcceptsReturn="True">
                            </TextBox>
                        </StackPanel>

                            <TextBlock  Grid.Row="3" Grid.Column="0" Text="{Resx ResxName=Abakon15.LangKeys.ResourceLang, Key=_1_Note1_Label}" HorizontalAlignment="Right" Margin="4" VerticalAlignment="Center" />
                            <TextBox x:Name="_Note1_TextBox" Grid.Row="3" Grid.Column="1"  Margin="4" MinWidth="180"
                           Text="{Binding Path=CurrentPrzyrzadPomiarowy.Note1, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True, ValidatesOnDataErrors=True}"  IsReadOnly="{Binding Path=ReadOnly}" VerticalAlignment="Top" AcceptsTab="True" AcceptsReturn="True">
                            </TextBox>

                            <TextBlock  Grid.Row="4" Grid.Column="0" Text="{Resx ResxName=Abakon15.LangKeys.ResourceLang, Key=_1_Note2_Label}" HorizontalAlignment="Right" Margin="4" VerticalAlignment="Center" />
                            <TextBox x:Name="_Note2_TextBox" Grid.Row="4" Grid.Column="1"  Margin="4" MinWidth="180"
                           Text="{Binding Path=CurrentPrzyrzadPomiarowy.Note2, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True, ValidatesOnDataErrors=True}"  IsReadOnly="{Binding Path=ReadOnly}" VerticalAlignment="Top" AcceptsTab="True" AcceptsReturn="True">
                            </TextBox>


                            <TextBlock   Text="{Resx ResxName=Abakon15.LangKeys.ResourceLang, Key=_1_Flow2Test_Label}" 
                                 Grid.Row="5" Grid.Column="0"  HorizontalAlignment="Right" Margin="4" VerticalAlignment="Top"
                                 Visibility="{Binding ElementName=_KlasaRichTextBox, Path=Visibility}" Width="Auto" />
                       
                       <CS:FsRichTextBox Grid.Row="5" Grid.Column="1"   x:Name="_KlasaRichTextBox"   MaxHeight="150" Visibility="{Binding Path=VisibleDetails, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                   CodeControlsVisibility="Collapsed" ClipToBounds="False"                                    
                                   Document="{Binding Path=CurrentPrzyrzadPomiarowy.Flow2, Converter={StaticResource FlowDocumentToXamlConverter}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                    VerticalAlignment="Top"  Margin="5" IsReadOnly="{Binding Path=ReadOnly}" MaxWidth="400" 
                                    PreviewLostKeyboardFocus="_KlasaRichTextBox_PreviewLostKeyboardFocus" HorizontalAlignment="Left" />

                     
                    </Grid>

                </GroupBox>
                </Expander>
            </Grid>


           

            <!--<TextBlock x:Name="errors" Grid.Row="18" Grid.Column="0" Grid.ColumnSpan="2" Text="{Binding Path=validatingResults}" HorizontalAlignment="Left" Margin="10,4" Foreground="#FF861111" FontWeight="Bold" FontSize="14" TextWrapping="Wrap" />-->
        </Grid>


    </ScrollViewer>



</UserControl>
