<V:WindowBaseClass x:Class="Abakon15.Views.Windows.KeyBoardContentWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="{Resx ResxName=Abakon15.LangKeys.ResourceLang, Key=_KeyBoardContent_Title}" 
                   
        Icon="{Resx ResxName=Abakon15.LangKeys.ResourceLang, Key=WindowIcon}"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:VM="clr-namespace:Abakon15.ViewModels"
        xmlns:V="clr-namespace:Abakon15.Views"
       xmlns:CS="clr-namespace:Abakon15.Views.Controls.Standard"
        Height="600" Width="950" WindowStartupLocation="CenterScreen" 
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d"
        d:DataContext="{d:DesignInstance Type=VM:_KeyBoardKeyVM}" >

 

    <Window.DataContext>
        <VM:_KeyBoardKeyVM x:Name="mKeyBoardKeyVM" />
    </Window.DataContext>



    <Grid   >
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <StackPanel Grid.Row="0" Orientation="Horizontal"  Background="{StaticResource HeaderGridBackground}"  >
            <!--<TextBlock   Text="{Resx ResxName=Abakon15.LangKeys.ResourceLang, Key=_departmentList_Header}" VerticalAlignment="Center" FontStretch="ExtraExpanded" FontWeight="Bold" Margin="10,0,50,0" FontSize="16" FontStyle="Normal" />-->
        </StackPanel>
        
        <GroupBox Grid.Row="2"   >
            <DataGrid x:Name="_cDatagrid"   AutoGenerateColumns="False"  
                    IsReadOnly="{Binding Path=ReadOnly, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"   
                           ItemsSource="{Binding Path=_KeyBoardKeyCollection, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, NotifyOnTargetUpdated=True}" 
                           IsSynchronizedWithCurrentItem="True" TargetUpdated="_cDatagrid_TargetUpdated"
                      SelectionChanged="_cDatagrid_SelectionChanged"
                           CanUserAddRows="False" CanUserDeleteRows="False"  Margin="5"  HorizontalAlignment="Left" PreviewKeyDown="_cDatagrid_PreviewKeyDown" SelectedItem="{Binding Path=Current_KeyBoardKey}" IsTabStop="True" MinRowHeight="25">
                <!--Visibility="{Binding Path=IsCurrentProductClassificationNotNull, Converter={StaticResource BooleanToVisibilityConverter}}"-->
                <DataGrid.RowStyle>
                    <Style TargetType="DataGridRow">
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background"  Value="{DynamicResource HeaderFuterBrush}" />
                            </Trigger>

                        </Style.Triggers>
                    </Style>
                </DataGrid.RowStyle>

                <DataGrid.CellStyle>
                    <Style TargetType="DataGridCell">
                        <Setter Property="Foreground" Value="Black"/>
                        <Setter Property="BorderThickness" Value="0"/>
                        <Style.Triggers>
                            <DataTrigger   Binding="{Binding Path=Inherited}" Value="true">
                                <Setter Property="IsEnabled" Value="False" />
                            </DataTrigger>
                            <Trigger Property="IsSelected" Value="True" >
                                <Setter Property="Background"  Value="{DynamicResource TextBoxBrush}" />
                                <!--  selected row background-->
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </DataGrid.CellStyle>

                <DataGrid.Resources>
                    <Style x:Key="CellEditStyle" TargetType="{x:Type TextBox}">
                        <Setter Property="BorderThickness" Value="2"/>
                        <Setter Property="BorderBrush" Value="DarkOliveGreen"/>
                        <Setter Property="Background"  Value="{DynamicResource TextBoxBrush}" />
                        <Style.Triggers>
                            <Trigger Property="Validation.HasError" Value="true">
                                <Setter Property="BorderThickness" Value="2"/>
                                <Setter Property="BorderBrush" Value="Red"/>
                                <Setter Property="ToolTip"  Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </DataGrid.Resources>

                <DataGrid.Columns>

                    <DataGridTextColumn Binding="{Binding Path=_KeyLp, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, ValidatesOnDataErrors=True, NotifyOnValidationError=True, ValidatesOnExceptions=True}" 
                                            Header="{Resx ResxName=Abakon15.LangKeys.ResourceLang, Key=_Lp_Header}" EditingElementStyle="{StaticResource CellEditStyle}"
                                        Width="50"/>

                   

                    <DataGridTextColumn Binding="{Binding Path=_KeyValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, NotifyOnValidationError=True, ValidatesOnExceptions=True}" 
                                            Header="{Resx ResxName=Abakon15.LangKeys.ResourceLang, Key=_Char_Header}" EditingElementStyle="{StaticResource CellEditStyle}"
                                        Width="40*">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="TextWrapping" Value="Wrap"/>
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>

               </DataGrid.Columns>
            </DataGrid>
        </GroupBox>
     

           
            <ToolBar Grid.Row="5"  >

            <ToggleButton x:Name="_EditMode" IsChecked="{Binding Path=ReadOnly, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, Converter={StaticResource GlobalBoolRevertConverter}}"
                                      Style="{StaticResource EditButtonStyle}"
                                      Content="{Resx ResxName=Abakon15.LangKeys.ResourceLang, Key=_editMode_DataButtonsUC}" ToolTip="{Resx ResxName=Abakon15.LangKeys.ResourceLang, Key=_editModeToolTip_DataButtonsUC}" Margin="4,2" DataContext="{Binding}" Visibility="Visible">
            </ToggleButton>

             
                <!--<Button x:Name="RefreshButton" Margin="4" Padding="4,1" Style="{StaticResource RefreshCommandButtonStyle}"  Content="{Resx ResxName=Abakon15.LangKeys.ResourceLang, Key=_refresh_DataButtonsUC}" ToolTip="{Resx ResxName=Abakon15.LangKeys.ResourceLang, Key=_refreshToolTip_DataButtonsUC}" Command="{Binding Path=ReloadDataCommand}" />-->
                <Button x:Name="SaveButton"   Command="{Binding Path=SaveCommand}"  
                                      Style="{StaticResource CommandButtonStyle}" 
                                     Visibility="{Binding ElementName=_EditMode, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}}" MinWidth="60" Padding="4,0,8,0" >
                <ButtonBase.Content>
                    <StackPanel Orientation="Horizontal">
                        <Image  Source="/Abakon15;component/Images/Save.png" Width="16" Height="16" Margin="5,0" />
                        <TextBlock Text="{Resx ResxName=Abakon15.LangKeys.ResourceLang, Key=_save_DataButtonsUC}"  ToolTip="{Resx ResxName=Abakon15.LangKeys.ResourceLang, Key=_saveToolTip_DataButtonsUC}" Margin="0,0,4,0" />
                    </StackPanel>
                </ButtonBase.Content>
            </Button>
            <Button   Margin="5,0"
                            Visibility="{Binding Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverterTrueFalse}, ConverterParameter=true, ElementName=_EditMode}"
                            Style="{StaticResource CommandButtonStyle}" Command="{Binding Path=New_KeyBoardKey}"  
                              ToolTip="{Resx ResxName=Abakon15.LangKeys.ResourceLang, Key=_newFilePath_ToolTip}" CommandParameter="{Binding ElementName=_cDatagrid}">
                <ButtonBase.Content>
                    <StackPanel Orientation="Horizontal">
                        <!--<Image  Source="/Abakon15;component/Images/New document.png" Width="16" Height="16" Margin="5,0" />-->
                        <TextBlock Text="{Resx ResxName=Abakon15.LangKeys.ResourceLang, Key=_newKey_Buttons}" Margin="0,0,5,0"/>
                    </StackPanel>
                </ButtonBase.Content>
            </Button>
         
                <Button   Margin="5,0"
                             Visibility="{Binding Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverterTrueFalse}, ConverterParameter=true, ElementName=_EditMode}"
                            Style="{StaticResource CommandButtonStyle}"    
                             ToolTip="{Resx ResxName=Abakon15.LangKeys.ResourceLang, Key=_delete_ToolTip}" IsEnabled="{Binding Path=isDepartmentSelected}" Command="{Binding Path=DeleteCommand}">
                <ButtonBase.Content>
                    <StackPanel Orientation="Horizontal">
                        <Image  Source="/Abakon15;component/Images/Erase.png" Width="16" Height="16" Margin="5,0" />
                        <TextBlock Text="{Resx ResxName=Abakon15.LangKeys.ResourceLang, Key=_deleteKey_Button}" Margin="0,0,5,0"/>
                    </StackPanel>
                </ButtonBase.Content>
            </Button>

            <Button   Margin="5,0"
                             Visibility="{Binding Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverterTrueFalse}, ConverterParameter=true, ElementName=_EditMode}"
                            Style="{StaticResource CommandButtonStyle}"    
                             ToolTip="{Resx ResxName=Abakon15.LangKeys.ResourceLang, Key=_delete_ToolTip}" IsEnabled="{Binding Path=isDepartmentSelected}" 
                            Command="{Binding Path=InitilizeCommand}">
                <ButtonBase.Content>
                    <StackPanel Orientation="Horizontal">
                        <Image  Source="/Abakon15;component/Images/keyboard.png" Width="16" Height="16" Margin="5,0" />
                        <TextBlock Text="{Resx ResxName=Abakon15.LangKeys.ResourceLang, Key=_initKeyBoard_Button}" Margin="0,0,5,0"/>
                    </StackPanel>
                </ButtonBase.Content>
            </Button>


        </ToolBar>
    </Grid>
</V:WindowBaseClass>
